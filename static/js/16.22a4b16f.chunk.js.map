{"version":3,"sources":["../../node_modules/fbjs/lib/emptyFunction.js","../../node_modules/fbjs/lib/invariant.js","../../node_modules/object-assign/index.js","../../node_modules/prop-types/lib/ReactPropTypesSecret.js","../../node_modules/prop-types/checkPropTypes.js","../../node_modules/prop-types/index.js","../../node_modules/prop-types/factoryWithThrowingShims.js","../../src/constant.js","../../src/decorators/staticMethods.js","../../src/decorators/customEvent.js","../../src/decorators/bodyMode.js","../../src/utils/getPosition.js","../../src/utils/getTipContent.js","../../src/utils/aria.js","../../src/decorators/trackRemoval.js","../../src/index.js","../../src/decorators/windowListener.js","../../src/decorators/isCapture.js","../../src/decorators/getEffect.js","../../src/utils/nodeListToArray.js"],"names":["makeEmptyFunction","arg","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","this","thatReturnsArgument","condition","format","a","b","c","d","e","f","error","undefined","Error","args","argIndex","replace","name","framesToPop","getOwnPropertySymbols","Object","hasOwnProperty","prototype","propIsEnumerable","propertyIsEnumerable","toObject","val","TypeError","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","map","n","join","test3","split","forEach","letter","keys","err","shouldUseNative","module","shim","props","propName","componentName","location","propFullName","secret","ReactPropTypesSecret","invariant","getShim","isRequired","ReactPropTypes","array","bool","func","number","object","string","symbol","any","arrayOf","element","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","require$$1","HIDE","REBUILD","SHOW","dispatchGlobalEvent","eventName","opts","window","event","detail","document","checkStatus","show","id","isCapture","currentItem","hideTooltip","setUntargetItems","getTargetArray","targetArray","currentTarget","customListeners","set","target","configurable","value","get","bodyListener","options","respectEffect","customEvent","tip","forId","isCustomEvent","isTargetBelongsToTooltip","getEffect","proxy","makeProxy","callback","findCustomEvents","dataAttribute","events","getBody","getDimensions","tipWidth","tipHeight","targetWidth","targetHeight","getCurrentOffset","mouseX","mouseY","defaultOffset","getDefaultPosition","calculateOffset","extraOffset_X","extraOffset_Y","windowWidth","windowHeight","getParent","parentTop","parentLeft","getTipOffsetLeft","place","offset_X","getTipOffsetTop","offset_Y","outsideRight","p","getTipOffsetRight","outsideBottom","getTipOffsetBottom","outside","outsideLeft","outsideTop","inside","placesList","insideList","isNewState","shouldUpdatePlace","desiredPlace","newPlace","newState","position","left","parseInt","top","height","width","effect","boundingClientRect","targetTop","targetLeft","clientY","l","r","t","bottom","disToMouse","right","offset","JSON","key","currentParent","children","getContent","regexp","multiline","className","parseAria","ariaObj","prop","test","ReactTooltip","CONSTANT","hasTarget","staticMethods","windowListener","ele","eventOff","dataEvent","dataEventOff","customListener","dataEffect","possibleCustomEvents","possibleCustomEventsOff","body","customEvents","customEventsOff","listeners","bodyModeListeners","targetEventOff","bodyMode","trackRemoval","type","border","extraClass","html","delayHide","delayShow","currentEvent","ariaProps","isEmptyTip","disable","originTooltip","isMultiline","nextProps","prevState","newAriaProps","methodArray","method","resizeHide","tooltipRef","matches","escaped","length","nodeList","Array","fill","index","nodeListToArray","globalEventOff","isCaptureMode","content","state","getTipContent","placeholder","isGlobalCall","switchToSolid","scrollHide","result","getPosition","overridePosition","reshowDelay","self","updateState","delayUpdate","setInterval","setTimeout","afterShow","delayTime","eventTarget","isInvisible","clearTimeout","isScroll","afterHide","isMyElement","resetState","isVisible","setState","clearInterval","tooltipClass","clickable","Wrapper","wrapperClassName","ref","data-id","dangerouslySetInnerHTML","__html","React","Component","insecure","class","watchWindow","wrapper","MutationObserver","observer","mutations","m1","mutation","m2","childList","subtree"],"mappings":"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","file":"static/js/16.22a4b16f.chunk.js","sourcesContent":["\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV !== 'production') {\n  var invariant = require('fbjs/lib/invariant');\n  var warning = require('fbjs/lib/warning');\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (typeSpecs.hasOwnProperty(typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          invariant(typeof typeSpecs[typeSpecName] === 'function', '%s: %s type `%s` is invalid; it must be a function, usually from ' + 'the `prop-types` package, but received `%s`.', componentName || 'React class', location, typeSpecName, typeof typeSpecs[typeSpecName]);\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        warning(!error || error instanceof Error, '%s: type specification of %s `%s` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a %s. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).', componentName || 'React class', location, typeSpecName, typeof error);\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          warning(false, 'Failed %s type: %s%s', location, error.message, stack != null ? stack : '');\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = checkPropTypes;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","export default {\n  GLOBAL: {\n    HIDE: \"__react_tooltip_hide_event\",\n    REBUILD: \"__react_tooltip_rebuild_event\",\n    SHOW: \"__react_tooltip_show_event\",\n  },\n};\n","/**\n * Static methods for react-tooltip\n */\nimport CONSTANT from \"../constant\";\n\nconst dispatchGlobalEvent = (eventName, opts) => {\n  // Compatible with IE\n  // @see http://stackoverflow.com/questions/26596123/internet-explorer-9-10-11-event-constructor-doesnt-work\n  let event;\n\n  if (typeof window.CustomEvent === \"function\") {\n    event = new window.CustomEvent(eventName, { detail: opts });\n  } else {\n    event = document.createEvent(\"Event\");\n    event.initEvent(eventName, false, true);\n    event.detail = opts;\n  }\n\n  window.dispatchEvent(event);\n};\n\nexport default function(target) {\n  /**\n   * Hide all tooltip\n   * @trigger ReactTooltip.hide()\n   */\n  target.hide = target => {\n    dispatchGlobalEvent(CONSTANT.GLOBAL.HIDE, { target });\n  };\n\n  /**\n   * Rebuild all tooltip\n   * @trigger ReactTooltip.rebuild()\n   */\n  target.rebuild = () => {\n    dispatchGlobalEvent(CONSTANT.GLOBAL.REBUILD);\n  };\n\n  /**\n   * Show specific tooltip\n   * @trigger ReactTooltip.show()\n   */\n  target.show = target => {\n    dispatchGlobalEvent(CONSTANT.GLOBAL.SHOW, { target });\n  };\n\n  target.prototype.globalRebuild = function() {\n    if (this.mount) {\n      this.unbindListener();\n      this.bindListener();\n    }\n  };\n\n  target.prototype.globalShow = function(event) {\n    if (this.mount) {\n      // Create a fake event, specific show will limit the type to `solid`\n      // only `float` type cares e.clientX e.clientY\n      const e = { currentTarget: event.detail.target };\n      this.showTooltip(e, true);\n    }\n  };\n\n  target.prototype.globalHide = function(event) {\n    if (this.mount) {\n      const hasTarget =\n        (event && event.detail && event.detail.target && true) || false;\n      this.hideTooltip(\n        { currentTarget: hasTarget && event.detail.target },\n        hasTarget\n      );\n    }\n  };\n}\n","/**\n * Custom events to control showing and hiding of tooltip\n *\n * @attributes\n * - `event` {String}\n * - `eventOff` {String}\n */\n\nexport const checkStatus = function(dataEventOff, e) {\n  const { show } = this.state;\n  const { id } = this.props;\n  const isCapture = this.isCapture(e.currentTarget);\n  const currentItem = e.currentTarget.getAttribute(\"currentItem\");\n\n  if (!isCapture) e.stopPropagation();\n  if (show && currentItem === \"true\") {\n    if (!dataEventOff) this.hideTooltip(e);\n  } else {\n    e.currentTarget.setAttribute(\"currentItem\", \"true\");\n    setUntargetItems(e.currentTarget, this.getTargetArray(id));\n    this.showTooltip(e);\n  }\n};\n\nconst setUntargetItems = function(currentTarget, targetArray) {\n  for (let i = 0; i < targetArray.length; i++) {\n    if (currentTarget !== targetArray[i]) {\n      targetArray[i].setAttribute(\"currentItem\", \"false\");\n    } else {\n      targetArray[i].setAttribute(\"currentItem\", \"true\");\n    }\n  }\n};\n\nconst customListeners = {\n  id: \"9b69f92e-d3fe-498b-b1b4-c5e63a51b0cf\",\n  set(target, event, listener) {\n    if (this.id in target) {\n      const map = target[this.id];\n      map[event] = listener;\n    } else {\n      // this is workaround for WeakMap, which is not supported in older browsers, such as IE\n      Object.defineProperty(target, this.id, {\n        configurable: true,\n        value: { [event]: listener },\n      });\n    }\n  },\n  get(target, event) {\n    const map = target[this.id];\n    if (map !== undefined) {\n      return map[event];\n    }\n  },\n};\n\nexport default function(target) {\n  target.prototype.isCustomEvent = function(ele) {\n    const { event } = this.state;\n    return event || !!ele.getAttribute(\"data-event\");\n  };\n\n  /* Bind listener for custom event */\n  target.prototype.customBindListener = function(ele) {\n    const { event, eventOff } = this.state;\n    const dataEvent = ele.getAttribute(\"data-event\") || event;\n    const dataEventOff = ele.getAttribute(\"data-event-off\") || eventOff;\n\n    dataEvent.split(\" \").forEach(event => {\n      ele.removeEventListener(event, customListeners.get(ele, event));\n      const customListener = checkStatus.bind(this, dataEventOff);\n      customListeners.set(ele, event, customListener);\n      ele.addEventListener(event, customListener, false);\n    });\n    if (dataEventOff) {\n      dataEventOff.split(\" \").forEach(event => {\n        ele.removeEventListener(event, this.hideTooltip);\n        ele.addEventListener(event, this.hideTooltip, false);\n      });\n    }\n  };\n\n  /* Unbind listener for custom event */\n  target.prototype.customUnbindListener = function(ele) {\n    const { event, eventOff } = this.state;\n    const dataEvent = event || ele.getAttribute(\"data-event\");\n    const dataEventOff = eventOff || ele.getAttribute(\"data-event-off\");\n\n    ele.removeEventListener(dataEvent, customListeners.get(ele, event));\n    if (dataEventOff) ele.removeEventListener(dataEventOff, this.hideTooltip);\n  };\n}\n","/**\n * Util method to get effect\n */\nimport { checkStatus } from \"./customEvent\";\n\nconst makeProxy = e => {\n  const proxy = {};\n  for (const key in e) {\n    if (typeof e[key] === \"function\") {\n      proxy[key] = e[key].bind(e);\n    } else {\n      proxy[key] = e[key];\n    }\n  }\n  return proxy;\n};\n\nconst bodyListener = function(callback, options, e) {\n  const { respectEffect = false, customEvent = false } = options;\n  const { id } = this.props;\n\n  const tip = e.target.getAttribute(\"data-tip\") || null;\n  const forId = e.target.getAttribute(\"data-for\") || null;\n\n  const target = e.target;\n  if (this.isCustomEvent(target) && !customEvent) {\n    return;\n  }\n\n  const isTargetBelongsToTooltip =\n    (id == null && forId == null) || forId === id;\n\n  if (\n    tip != null &&\n    (!respectEffect || this.getEffect(target) === \"float\") &&\n    isTargetBelongsToTooltip\n  ) {\n    const proxy = makeProxy(e);\n    proxy.currentTarget = target;\n    callback(proxy);\n  }\n};\n\nconst findCustomEvents = (targetArray, dataAttribute) => {\n  const events = {};\n  targetArray.forEach(target => {\n    const event = target.getAttribute(dataAttribute);\n    if (event) event.split(\" \").forEach(event => (events[event] = true));\n  });\n\n  return events;\n};\n\nconst getBody = () => document.getElementsByTagName(\"body\")[0];\n\nexport default function(target) {\n  target.prototype.isBodyMode = function() {\n    return !!this.props.bodyMode;\n  };\n\n  target.prototype.bindBodyListener = function(targetArray) {\n    const {\n      event,\n      eventOff,\n      possibleCustomEvents,\n      possibleCustomEventsOff,\n    } = this.state;\n    const body = getBody();\n\n    const customEvents = findCustomEvents(targetArray, \"data-event\");\n    const customEventsOff = findCustomEvents(targetArray, \"data-event-off\");\n\n    if (event != null) customEvents[event] = true;\n    if (eventOff != null) customEventsOff[eventOff] = true;\n    possibleCustomEvents\n      .split(\" \")\n      .forEach(event => (customEvents[event] = true));\n    possibleCustomEventsOff\n      .split(\" \")\n      .forEach(event => (customEventsOff[event] = true));\n\n    this.unbindBodyListener(body);\n\n    const listeners = (this.bodyModeListeners = {});\n    if (event == null) {\n      listeners.mouseover = bodyListener.bind(this, this.showTooltip, {});\n      listeners.mousemove = bodyListener.bind(this, this.updateTooltip, {\n        respectEffect: true,\n      });\n      listeners.mouseout = bodyListener.bind(this, this.hideTooltip, {});\n    }\n\n    for (const event in customEvents) {\n      listeners[event] = bodyListener.bind(\n        this,\n        e => {\n          const targetEventOff =\n            e.currentTarget.getAttribute(\"data-event-off\") || eventOff;\n          checkStatus.call(this, targetEventOff, e);\n        },\n        { customEvent: true }\n      );\n    }\n    for (const event in customEventsOff) {\n      listeners[event] = bodyListener.bind(this, this.hideTooltip, {\n        customEvent: true,\n      });\n    }\n    for (const event in listeners) {\n      body.addEventListener(event, listeners[event]);\n    }\n  };\n\n  target.prototype.unbindBodyListener = function(body) {\n    body = body || getBody();\n\n    const listeners = this.bodyModeListeners;\n    for (const event in listeners) {\n      body.removeEventListener(event, listeners[event]);\n    }\n  };\n}\n","/**\n * Calculate the position of tooltip\n *\n * @params\n * - `e` {Event} the event of current mouse\n * - `target` {Element} the currentTarget of the event\n * - `node` {DOM} the react-tooltip object\n * - `place` {String} top / right / bottom / left\n * - `effect` {String} float / solid\n * - `offset` {Object} the offset to default position\n *\n * @return {Object}\n * - `isNewState` {Bool} required\n * - `newState` {Object}\n * - `position` {Object} {left: {Number}, top: {Number}}\n */\nexport default function(e, target, node, place, desiredPlace, effect, offset) {\n  const { width: tipWidth, height: tipHeight } = getDimensions(node);\n\n  const { width: targetWidth, height: targetHeight } = getDimensions(target);\n\n  const { mouseX, mouseY } = getCurrentOffset(e, target, effect);\n  const defaultOffset = getDefaultPosition(\n    effect,\n    targetWidth,\n    targetHeight,\n    tipWidth,\n    tipHeight\n  );\n  const { extraOffset_X, extraOffset_Y } = calculateOffset(offset);\n\n  const windowWidth = window.innerWidth;\n  const windowHeight = window.innerHeight;\n\n  const { parentTop, parentLeft } = getParent(node);\n\n  // Get the edge offset of the tooltip\n  const getTipOffsetLeft = place => {\n    const offset_X = defaultOffset[place].l;\n    return mouseX + offset_X + extraOffset_X;\n  };\n  const getTipOffsetRight = place => {\n    const offset_X = defaultOffset[place].r;\n    return mouseX + offset_X + extraOffset_X;\n  };\n  const getTipOffsetTop = place => {\n    const offset_Y = defaultOffset[place].t;\n    return mouseY + offset_Y + extraOffset_Y;\n  };\n  const getTipOffsetBottom = place => {\n    const offset_Y = defaultOffset[place].b;\n    return mouseY + offset_Y + extraOffset_Y;\n  };\n\n  //\n  // Functions to test whether the tooltip's sides are inside\n  // the client window for a given orientation p\n  //\n  //  _____________\n  // |             | <-- Right side\n  // | p = 'left'  |\\\n  // |             |/  |\\\n  // |_____________|   |_\\  <-- Mouse\n  //      / \\           |\n  //       |\n  //       |\n  //  Bottom side\n  //\n  const outsideLeft = p => getTipOffsetLeft(p) < 0;\n  const outsideRight = p => getTipOffsetRight(p) > windowWidth;\n  const outsideTop = p => getTipOffsetTop(p) < 0;\n  const outsideBottom = p => getTipOffsetBottom(p) > windowHeight;\n\n  // Check whether the tooltip with orientation p is completely inside the client window\n  const outside = p =>\n    outsideLeft(p) || outsideRight(p) || outsideTop(p) || outsideBottom(p);\n  const inside = p => !outside(p);\n\n  const placesList = [\"top\", \"bottom\", \"left\", \"right\"];\n  const insideList = [];\n  for (let i = 0; i < 4; i++) {\n    const p = placesList[i];\n    if (inside(p)) {\n      insideList.push(p);\n    }\n  }\n\n  let isNewState = false;\n  let newPlace;\n  const shouldUpdatePlace = desiredPlace !== place;\n  if (inside(desiredPlace) && shouldUpdatePlace) {\n    isNewState = true;\n    newPlace = desiredPlace;\n  } else if (\n    insideList.length > 0 &&\n    shouldUpdatePlace &&\n    outside(desiredPlace) &&\n    outside(place)\n  ) {\n    isNewState = true;\n    newPlace = insideList[0];\n  }\n\n  if (isNewState) {\n    return {\n      isNewState: true,\n      newState: { place: newPlace },\n    };\n  }\n\n  return {\n    isNewState: false,\n    position: {\n      left: parseInt(getTipOffsetLeft(place) - parentLeft, 10),\n      top: parseInt(getTipOffsetTop(place) - parentTop, 10),\n    },\n  };\n}\n\nconst getDimensions = node => {\n  const { height, width } = node.getBoundingClientRect();\n  return {\n    height: parseInt(height, 10),\n    width: parseInt(width, 10),\n  };\n};\n\n// Get current mouse offset\nconst getCurrentOffset = (e, currentTarget, effect) => {\n  const boundingClientRect = currentTarget.getBoundingClientRect();\n  const targetTop = boundingClientRect.top;\n  const targetLeft = boundingClientRect.left;\n  const { width: targetWidth, height: targetHeight } = getDimensions(\n    currentTarget\n  );\n\n  if (effect === \"float\") {\n    return {\n      mouseX: e.clientX,\n      mouseY: e.clientY,\n    };\n  }\n  return {\n    mouseX: targetLeft + targetWidth / 2,\n    mouseY: targetTop + targetHeight / 2,\n  };\n};\n\n// List all possibility of tooltip final offset\n// This is useful in judging if it is necessary for tooltip to switch position when out of window\nconst getDefaultPosition = (\n  effect,\n  targetWidth,\n  targetHeight,\n  tipWidth,\n  tipHeight\n) => {\n  let top;\n  let right;\n  let bottom;\n  let left;\n  const disToMouse = 3;\n  const triangleHeight = 2;\n  const cursorHeight = 12; // Optimize for float bottom only, cause the cursor will hide the tooltip\n\n  if (effect === \"float\") {\n    top = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: -(tipHeight + disToMouse + triangleHeight),\n      b: -disToMouse,\n    };\n    bottom = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: disToMouse + cursorHeight,\n      b: tipHeight + disToMouse + triangleHeight + cursorHeight,\n    };\n    left = {\n      l: -(tipWidth + disToMouse + triangleHeight),\n      r: -disToMouse,\n      t: -(tipHeight / 2),\n      b: tipHeight / 2,\n    };\n    right = {\n      l: disToMouse,\n      r: tipWidth + disToMouse + triangleHeight,\n      t: -(tipHeight / 2),\n      b: tipHeight / 2,\n    };\n  } else if (effect === \"solid\") {\n    top = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: -(targetHeight / 2 + tipHeight + triangleHeight),\n      b: -(targetHeight / 2),\n    };\n    bottom = {\n      l: -(tipWidth / 2),\n      r: tipWidth / 2,\n      t: targetHeight / 2,\n      b: targetHeight / 2 + tipHeight + triangleHeight,\n    };\n    left = {\n      l: -(tipWidth + targetWidth / 2 + triangleHeight),\n      r: -(targetWidth / 2),\n      t: -(tipHeight / 2),\n      b: tipHeight / 2,\n    };\n    right = {\n      l: targetWidth / 2,\n      r: tipWidth + targetWidth / 2 + triangleHeight,\n      t: -(tipHeight / 2),\n      b: tipHeight / 2,\n    };\n  }\n\n  return { top, bottom, left, right };\n};\n\n// Consider additional offset into position calculation\nconst calculateOffset = offset => {\n  let extraOffset_X = 0;\n  let extraOffset_Y = 0;\n\n  if (Object.prototype.toString.apply(offset) === \"[object String]\") {\n    offset = JSON.parse(offset.toString().replace(/\\'/g, '\"'));\n  }\n  for (const key in offset) {\n    if (key === \"top\") {\n      extraOffset_Y -= parseInt(offset[key], 10);\n    } else if (key === \"bottom\") {\n      extraOffset_Y += parseInt(offset[key], 10);\n    } else if (key === \"left\") {\n      extraOffset_X -= parseInt(offset[key], 10);\n    } else if (key === \"right\") {\n      extraOffset_X += parseInt(offset[key], 10);\n    }\n  }\n\n  return { extraOffset_X, extraOffset_Y };\n};\n\n// Get the offset of the parent elements\nconst getParent = currentTarget => {\n  let currentParent = currentTarget;\n  while (currentParent) {\n    if (\n      window.getComputedStyle(currentParent).getPropertyValue(\"transform\") !==\n      \"none\"\n    )\n      break;\n    currentParent = currentParent.parentElement;\n  }\n\n  const parentTop =\n    (currentParent && currentParent.getBoundingClientRect().top) || 0;\n  const parentLeft =\n    (currentParent && currentParent.getBoundingClientRect().left) || 0;\n\n  return { parentTop, parentLeft };\n};\n","/**\n * To get the tooltip content\n * it may comes from data-tip or this.props.children\n * it should support multiline\n *\n * @params\n * - `tip` {String} value of data-tip\n * - `children` {ReactElement} this.props.children\n * - `multiline` {Any} could be Bool(true/false) or String('true'/'false')\n *\n * @return\n * - String or react component\n */\nimport React from \"react\";\n\nexport default function(tip, children, getContent, multiline) {\n  if (children) return children;\n  if (getContent !== undefined && getContent !== null) return getContent; // getContent can be 0, '', etc.\n  if (getContent === null) return null; // Tip not exist and children is null or undefined\n\n  const regexp = /<br\\s*\\/?>/;\n  if (!multiline || multiline === \"false\" || !regexp.test(tip)) {\n    // No trim(), so that user can keep their input\n    return tip;\n  }\n\n  // Multiline tooltip content\n  return tip.split(regexp).map((d, i) => {\n    return (\n      <span key={i} className=\"multi-line\">\n        {d}\n      </span>\n    );\n  });\n}\n","/**\n * Support aria- and role in ReactTooltip\n *\n * @params props {Object}\n * @return {Object}\n */\nexport function parseAria(props) {\n  const ariaObj = {};\n  Object.keys(props)\n    .filter(prop => {\n      // aria-xxx and role is acceptable\n      return /(^aria-\\w+$|^role$)/.test(prop);\n    })\n    .forEach(prop => {\n      ariaObj[prop] = props[prop];\n    });\n\n  return ariaObj;\n}\n","/**\n * Tracking target removing from DOM.\n * It's necessary to hide tooltip when it's target disappears.\n * Otherwise, the tooltip would be shown forever until another target\n * is triggered.\n *\n * If MutationObserver is not available, this feature just doesn't work.\n */\n\n// https://hacks.mozilla.org/2012/05/dom-mutationobserver-reacting-to-dom-changes-without-killing-browser-performance/\nconst getMutationObserverClass = () => {\n  return (\n    window.MutationObserver ||\n    window.WebKitMutationObserver ||\n    window.MozMutationObserver\n  );\n};\n\nexport default function(target) {\n  target.prototype.bindRemovalTracker = function() {\n    const MutationObserver = getMutationObserverClass();\n    if (MutationObserver == null) return;\n\n    const observer = new MutationObserver(mutations => {\n      for (let m1 = 0; m1 < mutations.length; m1++) {\n        const mutation = mutations[m1];\n        for (let m2 = 0; m2 < mutation.removedNodes.length; m2++) {\n          const element = mutation.removedNodes[m2];\n          if (element === this.state.currentTarget) {\n            this.hideTooltip();\n            return;\n          }\n        }\n      }\n    });\n\n    observer.observe(window.document, { childList: true, subtree: true });\n\n    this.removalTracker = observer;\n  };\n\n  target.prototype.unbindRemovalTracker = function() {\n    if (this.removalTracker) {\n      this.removalTracker.disconnect();\n      this.removalTracker = null;\n    }\n  };\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n/* Decorators */\nimport staticMethods from \"./decorators/staticMethods\";\nimport windowListener from \"./decorators/windowListener\";\nimport customEvent from \"./decorators/customEvent\";\nimport isCapture from \"./decorators/isCapture\";\nimport getEffect from \"./decorators/getEffect\";\nimport bodyMode from \"./decorators/bodyMode\";\nimport trackRemoval from \"./decorators/trackRemoval\";\n\n/* Utils */\nimport getPosition from \"./utils/getPosition\";\nimport getTipContent from \"./utils/getTipContent\";\nimport { parseAria } from \"./utils/aria\";\nimport nodeListToArray from \"./utils/nodeListToArray\";\n\n/* CSS */\n// import cssStyle from \"./style\";\nimport \"./index.scss\";\n\n@staticMethods\n@windowListener\n@customEvent\n@isCapture\n@getEffect\n@bodyMode\n@trackRemoval\nclass ReactTooltip extends React.Component {\n  static propTypes = {\n    children: PropTypes.any,\n    place: PropTypes.string,\n    type: PropTypes.string,\n    effect: PropTypes.string,\n    offset: PropTypes.object,\n    multiline: PropTypes.bool,\n    border: PropTypes.bool,\n    insecure: PropTypes.bool,\n    class: PropTypes.string,\n    className: PropTypes.string,\n    id: PropTypes.string,\n    html: PropTypes.bool,\n    delayHide: PropTypes.number,\n    delayUpdate: PropTypes.number,\n    delayShow: PropTypes.number,\n    event: PropTypes.string,\n    eventOff: PropTypes.string,\n    watchWindow: PropTypes.bool,\n    isCapture: PropTypes.bool,\n    globalEventOff: PropTypes.string,\n    getContent: PropTypes.any,\n    afterShow: PropTypes.func,\n    afterHide: PropTypes.func,\n    overridePosition: PropTypes.func,\n    disable: PropTypes.bool,\n    scrollHide: PropTypes.bool,\n    resizeHide: PropTypes.bool,\n    wrapper: PropTypes.string,\n    bodyMode: PropTypes.bool,\n    possibleCustomEvents: PropTypes.string,\n    possibleCustomEventsOff: PropTypes.string,\n    clickable: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    insecure: true,\n    resizeHide: true,\n    wrapper: \"div\",\n    clickable: false,\n  };\n\n  static supportedWrappers = [\"div\", \"span\"];\n\n  static displayName = \"ReactTooltip\";\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      place: props.place || \"top\", // Direction of tooltip\n      desiredPlace: props.place || \"top\",\n      type: \"dark\", // Color theme of tooltip\n      effect: \"float\", // float or fixed\n      show: false,\n      border: false,\n      offset: {},\n      extraClass: \"\",\n      html: false,\n      delayHide: 0,\n      delayShow: 0,\n      event: props.event || null,\n      eventOff: props.eventOff || null,\n      currentEvent: null, // Current mouse event\n      currentTarget: null, // Current target of mouse event\n      ariaProps: parseAria(props), // aria- and role attributes\n      isEmptyTip: false,\n      disable: false,\n      possibleCustomEvents: props.possibleCustomEvents || \"\",\n      possibleCustomEventsOff: props.possibleCustomEventsOff || \"\",\n      originTooltip: null,\n      isMultiline: false,\n    };\n\n    this.bind([\n      \"showTooltip\",\n      \"updateTooltip\",\n      \"hideTooltip\",\n      \"hideTooltipOnScroll\",\n      \"getTooltipContent\",\n      \"globalRebuild\",\n      \"globalShow\",\n      \"globalHide\",\n      \"onWindowResize\",\n      \"mouseOnToolTip\",\n    ]);\n\n    this.mount = true;\n    this.delayShowLoop = null;\n    this.delayHideLoop = null;\n    this.delayReshow = null;\n    this.intervalUpdateContent = null;\n  }\n\n  /**\n   * For unify the bind and unbind listener\n   */\n  bind(methodArray) {\n    methodArray.forEach(method => {\n      this[method] = this[method].bind(this);\n    });\n  }\n\n  componentDidMount() {\n    const { insecure, resizeHide } = this.props;\n    if (insecure) {\n      // this.setStyleHeader(); // Set the style to the <link>\n    }\n\n    this.bindListener(); // Bind listener for tooltip\n    this.bindWindowEvents(resizeHide); // Bind global event for static method\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { ariaProps } = prevState;\n    const newAriaProps = parseAria(nextProps);\n    const isChanged = Object.keys(newAriaProps).some(props => {\n      return newAriaProps[props] !== ariaProps[props];\n    });\n    if (!isChanged) {\n      return null;\n    }\n    return {\n      ...prevState,\n      ariaProps: newAriaProps,\n    };\n  }\n\n  componentWillUnmount() {\n    this.mount = false;\n\n    this.clearTimer();\n\n    this.unbindListener();\n    this.removeScrollListener();\n    this.unbindWindowEvents();\n  }\n\n  /**\n   * Return if the mouse is on the tooltip.\n   * @returns {boolean} true - mouse is on the tooltip\n   */\n  mouseOnToolTip() {\n    const { show } = this.state;\n\n    if (show && this.tooltipRef) {\n      /* old IE or Firefox work around */\n      if (!this.tooltipRef.matches) {\n        /* old IE work around */\n        if (this.tooltipRef.msMatchesSelector) {\n          this.tooltipRef.matches = this.tooltipRef.msMatchesSelector;\n        } else {\n          /* old Firefox work around */\n          this.tooltipRef.matches = this.tooltipRef.mozMatchesSelector;\n        }\n      }\n      return this.tooltipRef.matches(\":hover\");\n    }\n    return false;\n  }\n\n  /**\n   * Pick out corresponded target elements\n   */\n  getTargetArray(id) {\n    let targetArray;\n    if (!id) {\n      targetArray = document.querySelectorAll(\"[data-tip]:not([data-for])\");\n    } else {\n      const escaped = id.replace(/\\\\/g, \"\\\\\\\\\").replace(/\"/g, '\\\\\"');\n      targetArray = document.querySelectorAll(\n        `[data-tip][data-for=\"${escaped}\"]`\n      );\n    }\n    // targetArray is a NodeList, convert it to a real array\n    return nodeListToArray(targetArray);\n  }\n\n  /**\n   * Bind listener to the target elements\n   * These listeners used to trigger showing or hiding the tooltip\n   */\n  bindListener() {\n    const { id, globalEventOff, isCapture } = this.props;\n    const targetArray = this.getTargetArray(id);\n\n    targetArray.forEach(target => {\n      if (target.getAttribute(\"currentItem\") === null) {\n        target.setAttribute(\"currentItem\", \"false\");\n      }\n      this.unbindBasicListener(target);\n      if (this.isCustomEvent(target)) {\n        this.customUnbindListener(target);\n      }\n    });\n\n    if (this.isBodyMode()) {\n      this.bindBodyListener(targetArray);\n    } else {\n      targetArray.forEach(target => {\n        const isCaptureMode = this.isCapture(target);\n        const effect = this.getEffect(target);\n        if (this.isCustomEvent(target)) {\n          this.customBindListener(target);\n          return;\n        }\n\n        target.addEventListener(\"mouseenter\", this.showTooltip, isCaptureMode);\n        if (effect === \"float\") {\n          target.addEventListener(\n            \"mousemove\",\n            this.updateTooltip,\n            isCaptureMode\n          );\n        }\n        target.addEventListener(\"mouseleave\", this.hideTooltip, isCaptureMode);\n      });\n    }\n\n    // Global event to hide tooltip\n    if (globalEventOff) {\n      window.removeEventListener(globalEventOff, this.hideTooltip);\n      window.addEventListener(globalEventOff, this.hideTooltip, isCapture);\n    }\n\n    // Track removal of targetArray elements from DOM\n    this.bindRemovalTracker();\n  }\n\n  /**\n   * Unbind listeners on target elements\n   */\n  unbindListener() {\n    const { id, globalEventOff } = this.props;\n    if (this.isBodyMode()) {\n      this.unbindBodyListener();\n    } else {\n      const targetArray = this.getTargetArray(id);\n      targetArray.forEach(target => {\n        this.unbindBasicListener(target);\n        if (this.isCustomEvent(target)) this.customUnbindListener(target);\n      });\n    }\n\n    if (globalEventOff)\n      window.removeEventListener(globalEventOff, this.hideTooltip);\n    this.unbindRemovalTracker();\n  }\n\n  /**\n   * Invoke this before bind listener and unmount the component\n   * it is necessary to invoke this even when binding custom event\n   * so that the tooltip can switch between custom and default listener\n   */\n  unbindBasicListener(target) {\n    const isCaptureMode = this.isCapture(target);\n    target.removeEventListener(\"mouseenter\", this.showTooltip, isCaptureMode);\n    target.removeEventListener(\"mousemove\", this.updateTooltip, isCaptureMode);\n    target.removeEventListener(\"mouseleave\", this.hideTooltip, isCaptureMode);\n  }\n\n  getTooltipContent() {\n    const { getContent, children } = this.props;\n\n    // Generate tooltip content\n    let content;\n    if (getContent) {\n      if (Array.isArray(getContent)) {\n        content = getContent[0] && getContent[0](this.state.originTooltip);\n      } else {\n        content = getContent(this.state.originTooltip);\n      }\n    }\n\n    return getTipContent(\n      this.state.originTooltip,\n      children,\n      content,\n      this.state.isMultiline\n    );\n  }\n\n  isEmptyTip(placeholder) {\n    return (\n      (typeof placeholder === \"string\" && placeholder === \"\") ||\n      placeholder === null\n    );\n  }\n\n  /**\n   * When mouse enter, show the tooltip\n   */\n  showTooltip(e, isGlobalCall) {\n    if (isGlobalCall) {\n      // Don't trigger other elements belongs to other ReactTooltip\n      const targetArray = this.getTargetArray(this.props.id);\n      const isMyElement = targetArray.some(ele => ele === e.currentTarget);\n      if (!isMyElement) return;\n    }\n    // Get the tooltip content\n    // calculate in this phrase so that tip width height can be detected\n    const { multiline, getContent } = this.props;\n    const originTooltip = e.currentTarget.getAttribute(\"data-tip\");\n    const isMultiline =\n      e.currentTarget.getAttribute(\"data-multiline\") || multiline || false;\n\n    // If it is focus event or called by ReactTooltip.show, switch to `solid` effect\n    const switchToSolid = e instanceof window.FocusEvent || isGlobalCall;\n\n    // if it needs to skip adding hide listener to scroll\n    let scrollHide = true;\n    if (e.currentTarget.getAttribute(\"data-scroll-hide\")) {\n      scrollHide = e.currentTarget.getAttribute(\"data-scroll-hide\") === \"true\";\n    } else if (this.props.scrollHide != null) {\n      scrollHide = this.props.scrollHide;\n    }\n\n    // Make sure the correct place is set\n    const desiredPlace =\n      e.currentTarget.getAttribute(\"data-place\") || this.props.place || \"top\";\n    const effect =\n      (switchToSolid && \"solid\") || this.getEffect(e.currentTarget);\n    const offset =\n      e.currentTarget.getAttribute(\"data-offset\") || this.props.offset || {};\n    const result = getPosition(\n      e,\n      e.currentTarget,\n      this.tooltipRef,\n      desiredPlace,\n      desiredPlace,\n      effect,\n      offset\n    );\n    if (result.position && this.props.overridePosition) {\n      result.position = this.props.overridePosition(\n        result.position,\n        e.currentTarget,\n        this.tooltipRef,\n        desiredPlace,\n        desiredPlace,\n        effect,\n        offset\n      );\n    }\n\n    const place = result.isNewState ? result.newState.place : desiredPlace;\n\n    // To prevent previously created timers from triggering\n    this.clearTimer();\n\n    var target = e.currentTarget;\n\n    var reshowDelay = this.state.show\n      ? target.getAttribute(\"data-delay-update\") || this.props.delayUpdate\n      : 0;\n\n    var self = this;\n\n    var updateState = function updateState() {\n      self.setState(\n        {\n          originTooltip: originTooltip,\n          isMultiline: isMultiline,\n          desiredPlace: desiredPlace,\n          place: place,\n          type: target.getAttribute(\"data-type\") || self.props.type || \"dark\",\n          effect: effect,\n          offset: offset,\n          html: target.getAttribute(\"data-html\")\n            ? target.getAttribute(\"data-html\") === \"true\"\n            : self.props.html || false,\n          delayShow:\n            target.getAttribute(\"data-delay-show\") || self.props.delayShow || 0,\n          delayHide:\n            target.getAttribute(\"data-delay-hide\") || self.props.delayHide || 0,\n          delayUpdate:\n            target.getAttribute(\"data-delay-update\") ||\n            self.props.delayUpdate ||\n            0,\n          border: target.getAttribute(\"data-border\")\n            ? target.getAttribute(\"data-border\") === \"true\"\n            : self.props.border || false,\n          extraClass:\n            target.getAttribute(\"data-class\") ||\n            self.props.class ||\n            self.props.className ||\n            \"\",\n          disable: target.getAttribute(\"data-tip-disable\")\n            ? target.getAttribute(\"data-tip-disable\") === \"true\"\n            : self.props.disable || false,\n          currentTarget: target,\n        },\n        () => {\n          if (scrollHide) self.addScrollListener(self.state.currentTarget);\n          self.updateTooltip(e);\n\n          if (getContent && Array.isArray(getContent)) {\n            self.intervalUpdateContent = setInterval(() => {\n              if (self.mount) {\n                const { getContent } = self.props;\n                const placeholder = getTipContent(\n                  originTooltip,\n                  \"\",\n                  getContent[0](),\n                  isMultiline\n                );\n                const isEmptyTip = self.isEmptyTip(placeholder);\n                self.setState({\n                  isEmptyTip,\n                });\n                self.updatePosition();\n              }\n            }, getContent[1]);\n          }\n        }\n      );\n    };\n\n    // If there is no delay call immediately, don't allow events to get in first.\n    if (reshowDelay) {\n      this.delayReshow = setTimeout(updateState, reshowDelay);\n    } else {\n      updateState();\n    }\n  }\n\n  /**\n   * When mouse hover, update tool tip\n   */\n  updateTooltip(e) {\n    const { delayShow, disable } = this.state;\n    const { afterShow } = this.props;\n    const placeholder = this.getTooltipContent();\n    const delayTime = parseInt(delayShow, 10);\n    const eventTarget = e.currentTarget || e.target;\n\n    // Check if the mouse is actually over the tooltip, if so don't hide the tooltip\n    if (this.mouseOnToolTip()) {\n      return;\n    }\n\n    if (this.isEmptyTip(placeholder) || disable) return; // if the tooltip is empty, disable the tooltip\n    const updateState = () => {\n      if (\n        (Array.isArray(placeholder) && placeholder.length > 0) ||\n        placeholder\n      ) {\n        const isInvisible = !this.state.show;\n        this.setState(\n          {\n            currentEvent: e,\n            currentTarget: eventTarget,\n            show: true,\n          },\n          () => {\n            this.updatePosition();\n            if (isInvisible && afterShow) afterShow(e);\n          }\n        );\n      }\n    };\n\n    clearTimeout(this.delayShowLoop);\n    if (delayShow) {\n      this.delayShowLoop = setTimeout(updateState, delayTime);\n    } else {\n      updateState();\n    }\n  }\n\n  /*\n   * If we're mousing over the tooltip remove it when we leave.\n   */\n  listenForTooltipExit() {\n    const { show } = this.state;\n\n    if (show && this.tooltipRef) {\n      this.tooltipRef.addEventListener(\"mouseleave\", this.hideTooltip);\n    }\n  }\n\n  removeListenerForTooltipExit() {\n    const { show } = this.state;\n\n    if (show && this.tooltipRef) {\n      this.tooltipRef.removeEventListener(\"mouseleave\", this.hideTooltip);\n    }\n  }\n\n  /**\n   * When mouse leave, hide tooltip\n   */\n  hideTooltip(e, hasTarget, options = { isScroll: false }) {\n    const { disable } = this.state;\n    const { isScroll } = options;\n    const delayHide = isScroll ? 0 : this.state.delayHide;\n    const { afterHide } = this.props;\n    const placeholder = this.getTooltipContent();\n    if (!this.mount) return;\n    if (this.isEmptyTip(placeholder) || disable) return; // if the tooltip is empty, disable the tooltip\n    if (hasTarget) {\n      // Don't trigger other elements belongs to other ReactTooltip\n      const targetArray = this.getTargetArray(this.props.id);\n      const isMyElement = targetArray.some(ele => ele === e.currentTarget);\n      if (!isMyElement || !this.state.show) return;\n    }\n\n    const resetState = () => {\n      const isVisible = this.state.show;\n      // Check if the mouse is actually over the tooltip, if so don't hide the tooltip\n      if (this.mouseOnToolTip()) {\n        this.listenForTooltipExit();\n        return;\n      }\n      this.removeListenerForTooltipExit();\n\n      this.setState(\n        {\n          show: false,\n        },\n        () => {\n          this.removeScrollListener();\n          if (isVisible && afterHide) afterHide(e);\n        }\n      );\n    };\n\n    this.clearTimer();\n    if (delayHide) {\n      this.delayHideLoop = setTimeout(resetState, parseInt(delayHide, 10));\n    } else {\n      resetState();\n    }\n  }\n\n  /**\n   * When scroll, hide tooltip\n   */\n  hideTooltipOnScroll(event, hasTarget) {\n    this.hideTooltip(event, hasTarget, { isScroll: true });\n  }\n\n  /**\n   * Add scroll event listener when tooltip show\n   * automatically hide the tooltip when scrolling\n   */\n  addScrollListener(currentTarget) {\n    const isCaptureMode = this.isCapture(currentTarget);\n    window.addEventListener(\"scroll\", this.hideTooltipOnScroll, isCaptureMode);\n  }\n\n  removeScrollListener() {\n    window.removeEventListener(\"scroll\", this.hideTooltipOnScroll);\n  }\n\n  // Calculation the position\n  updatePosition() {\n    const {\n      currentEvent,\n      currentTarget,\n      place,\n      desiredPlace,\n      effect,\n      offset,\n    } = this.state;\n    const node = this.tooltipRef;\n    const result = getPosition(\n      currentEvent,\n      currentTarget,\n      node,\n      place,\n      desiredPlace,\n      effect,\n      offset\n    );\n    if (result.position && this.props.overridePosition) {\n      result.position = this.props.overridePosition(\n        result.position,\n        currentEvent,\n        currentTarget,\n        node,\n        place,\n        desiredPlace,\n        effect,\n        offset\n      );\n    }\n\n    if (result.isNewState) {\n      // Switch to reverse placement\n      return this.setState(result.newState, () => {\n        this.updatePosition();\n      });\n    }\n    // Set tooltip position\n    node.style.left = result.position.left + \"px\";\n    node.style.top = result.position.top + \"px\";\n  }\n\n  /**\n   * Set style tag in header\n   * in this way we can insert default css\n   */\n  /* setStyleHeader() {\n    const head = document.getElementsByTagName(\"head\")[0];\n    if (!head.querySelector('style[id=\"react-tooltip\"]')) {\n      const tag = document.createElement(\"style\");\n      tag.id = \"react-tooltip\";\n      tag.innerHTML = cssStyle; */\n  /* eslint-disable */\n/*      if (typeof __webpack_nonce__ !== 'undefined' && __webpack_nonce__) {\n        tag.setAttribute('nonce', __webpack_nonce__)\n      }*/\n      /* eslint-enable */\n  /*    head.insertBefore(tag, head.firstChild);\n    }\n  } */\n\n  /**\n   * CLear all kinds of timeout of interval\n   */\n  clearTimer() {\n    clearTimeout(this.delayShowLoop);\n    clearTimeout(this.delayHideLoop);\n    clearTimeout(this.delayReshow);\n    clearInterval(this.intervalUpdateContent);\n  }\n\n  render() {\n    const { extraClass, html, ariaProps, disable } = this.state;\n    const placeholder = this.getTooltipContent();\n    const isEmptyTip = this.isEmptyTip(placeholder);\n    const tooltipClass =\n      \"__react_component_tooltip\" +\n      (this.state.show && !disable && !isEmptyTip ? \" show\" : \"\") +\n      (this.state.border ? \" border\" : \"\") +\n      ` place-${this.state.place}` + // top, bottom, left, right\n      ` type-${this.state.type}` + // dark, success, warning, error, info, light\n      (this.props.delayUpdate ? \" allow_hover\" : \"\") +\n      (this.props.clickable ? \" allow_click\" : \"\");\n\n    let Wrapper = this.props.wrapper;\n    if (ReactTooltip.supportedWrappers.indexOf(Wrapper) < 0) {\n      Wrapper = ReactTooltip.defaultProps.wrapper;\n    }\n    const wrapperClassName = [tooltipClass, extraClass]\n      .filter(Boolean)\n      .join(\" \");\n\n    if (html) {\n      return (\n        <Wrapper\n          className={wrapperClassName}\n          id={this.props.id}\n          ref={ref => (this.tooltipRef = ref)}\n          {...ariaProps}\n          data-id=\"tooltip\"\n          dangerouslySetInnerHTML={{ __html: placeholder }}\n        />\n      );\n    } else {\n      return (\n        <Wrapper\n          className={wrapperClassName}\n          id={this.props.id}\n          {...ariaProps}\n          ref={ref => (this.tooltipRef = ref)}\n          data-id=\"tooltip\"\n        >\n          {placeholder}\n        </Wrapper>\n      );\n    }\n  }\n}\n\nexport default ReactTooltip;\n","/**\n * Events that should be bound to the window\n */\nimport CONSTANT from \"../constant\";\n\nexport default function(target) {\n  target.prototype.bindWindowEvents = function(resizeHide) {\n    // ReactTooltip.hide\n    window.removeEventListener(CONSTANT.GLOBAL.HIDE, this.globalHide);\n    window.addEventListener(CONSTANT.GLOBAL.HIDE, this.globalHide, false);\n\n    // ReactTooltip.rebuild\n    window.removeEventListener(CONSTANT.GLOBAL.REBUILD, this.globalRebuild);\n    window.addEventListener(CONSTANT.GLOBAL.REBUILD, this.globalRebuild, false);\n\n    // ReactTooltip.show\n    window.removeEventListener(CONSTANT.GLOBAL.SHOW, this.globalShow);\n    window.addEventListener(CONSTANT.GLOBAL.SHOW, this.globalShow, false);\n\n    // Resize\n    if (resizeHide) {\n      window.removeEventListener(\"resize\", this.onWindowResize);\n      window.addEventListener(\"resize\", this.onWindowResize, false);\n    }\n  };\n\n  target.prototype.unbindWindowEvents = function() {\n    window.removeEventListener(CONSTANT.GLOBAL.HIDE, this.globalHide);\n    window.removeEventListener(CONSTANT.GLOBAL.REBUILD, this.globalRebuild);\n    window.removeEventListener(CONSTANT.GLOBAL.SHOW, this.globalShow);\n    window.removeEventListener(\"resize\", this.onWindowResize);\n  };\n\n  /**\n   * invoked by resize event of window\n   */\n  target.prototype.onWindowResize = function() {\n    if (!this.mount) return;\n    this.hideTooltip();\n  };\n}\n","/**\n * Util method to judge if it should follow capture model\n */\n\nexport default function(target) {\n  target.prototype.isCapture = function(currentTarget) {\n    return (\n      (currentTarget &&\n        currentTarget.getAttribute(\"data-iscapture\") === \"true\") ||\n      this.props.isCapture ||\n      false\n    );\n  };\n}\n","/**\n * Util method to get effect\n */\n\nexport default function(target) {\n  target.prototype.getEffect = function(currentTarget) {\n    const dataEffect = currentTarget.getAttribute(\"data-effect\");\n    return dataEffect || this.props.effect || \"float\";\n  };\n}\n","/**\n * Convert nodelist to array\n * @see https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/core/createArrayFromMixed.js#L24\n * NodeLists are functions in Safari\n */\n\nexport default function(nodeList) {\n  const length = nodeList.length;\n  if (nodeList.hasOwnProperty) {\n    return Array.prototype.slice.call(nodeList);\n  }\n  return new Array(length).fill().map(index => nodeList[index]);\n}\n"],"sourceRoot":""}